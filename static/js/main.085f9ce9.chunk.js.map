{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","length","substring","prototype","PropTypes","number","isRequired","string","bool","HomePresenter","nowPlaying","upcoming","popular","error","loading","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","topRated","get","airingToday","showDetail","append_to_response","search","term","query","encodeURIComponent","movieApi","movieDetail","HomeContainer","state","data","results","this","setState","console","log","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.085f9ce9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child){\n    margin-bottom: 30px;\n    }    \n`;\n\nconst Title = styled.span`\n    font-size: 18px;\n    font-weight: 600;    \n`;\n\nconst Grid = styled.div`\n    margin-top: 15px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 123px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{ title }</Title>\n        <Grid>{ children }</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ])\n  };\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => <Container>\n                        <span role=\"img\" aria-label=\"Loading\">\n                        🔥 Loading... 🔥\n                        </span>\n                    </Container>\n\nexport default Loader;\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => `https://image.tmdb.org/t/p/w300/${props.bgUrl}`});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie=false }) => (\n    <Link to={isMovie? `/movie/${id}` : `/tv/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={ imageUrl } />\n                <Rating><span role=\"img\" aria-label=\"rating\">⭐</span>{ \" \" }{ rating }/10</Rating>\n            </ImageContainer>\n            <Title>{ title.length > 18 ? `${title.substring(0, 18)}...` : title }</Title>\n            <Year>{ year }</Year>\n        </Container>\n    </Link>\n)\n\n\nPoster.prototype = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool.isRequired\n}\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n    padding-top: 20px;\n`;\n\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>  loading ? <Loader />:\n    <Container>\n        <Helmet>\n            <title>Movies | Brandon Kim</title>\n        </Helmet>\n        { nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n        { nowPlaying.map(movie =>\n            <Poster \n                key={movie.id}\n                id={movie.id} \n                title={movie.original_title} \n                imageUrl={movie.poster_path}  \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n            />\n            ) }\n        </Section>\n        )}\n\n        { upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n        { upcoming.map(movie =>\n            <Poster \n                key={movie.id}\n                id={movie.id} \n                title={movie.original_title} \n                imageUrl={movie.poster_path}  \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n            />\n            ) }\n        </Section>\n        )} \n\n\n        { popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n        { popular.map(movie =>\n            <Poster \n                key={movie.id}\n                id={movie.id} \n                title={movie.original_title} \n                imageUrl={movie.poster_path}  \n                rating={movie.vote_average} \n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n            />\n            ) }\n        </Section>\n        )}\n        { error && <Message color =\"#d63031\" text={ error }/>} \n    </Container>\n    ;\n\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array, \n    popular: PropTypes.array, \n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key:\"c517912889c51083acdf5894095b4a8c\",\n        language: \"en-US\"\n    }\n});\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`, { params: { append_to_response: \"videos\" } }),\n    search: term => api.get(\"search/tv\", { params: { query: encodeURIComponent(term) } })\n    };\n\nexport const movieApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, { params: { append_to_response: \"videos\" } }),\n    search: term => api.get(\"search/movie\", { params: { query: encodeURIComponent(term) }})\n    };","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state = {\n        // From api.js\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount(){\n        try{\n            const {data: {results: nowPlaying}} = await movieApi.nowPlaying();\n            const {data: {results: upcoming}} = await movieApi.upcoming();\n            const {data: {results: popular}} = await movieApi.popular();\n          \n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n\n        } catch {\n            this.setState({\n                error: \"Can't find movies information.\"\n            })\n\n        } finally {\n            this.setState({\n                // Finished.\n                loading: false,\n\n            })\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        console.log(this.state)\n        return <HomePresenter \n            nowPlaying={nowPlaying} \n            upcoming={upcoming} \n            popular={popular}\n            error={error}\n            loading={loading} \n            />\n    }\n\n\n} \n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n            <title>Search | Brandon Kim</title>\n        </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (<Loader />) : (\n      <>\n        { movieResults && movieResults.length > 0 && (\n        <Section title=\"Movie Results\">\n        { movieResults.map(movie => \n            <Poster \n            key={movie.id}\n            id={movie.id} \n            title={movie.original_title} \n            imageUrl={movie.poster_path}  \n            rating={movie.vote_average} \n            year={movie.release_date && movie.release_date.substring(0, 4)}\n            isMovie={true}\n        />\n        ) }\n        \n        </Section>\n        )}\n\n        { tvResults && tvResults.length > 0 && (\n        <Section title=\"TV Results\">\n        { tvResults.map(tv => \n            <Poster \n            key={tv.id}\n            id={tv.id} \n            title={tv.original_name} \n            imageUrl={tv.poster_path}  \n            rating={tv.vote_average} \n            year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n            isMovie={false}\n          />\n          )}\n        </Section>\n        )}\n\n        { error && <Message color =\"#d63031\" text={ error }/>}\n        { movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message color =\"#636e72\" text={`Nothing Found.`}/> } \n      </>\n    )}\n    \n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>  loading ? <Loader />:\n    <Container>\n        <Helmet>\n            <title>TV Shows | Brandon Kim</title>\n        </Helmet>\n        { topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated TV\">\n        { topRated.map(tv => \n            <Poster \n                key={tv.id}\n                id={tv.id} \n                title={tv.original_name} \n                imageUrl={tv.poster_path}  \n                rating={tv.vote_average} \n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n            />\n            ) }\n        </Section>\n        )}\n\n        { airingToday && airingToday.length > 0 && (\n        <Section title=\"On Air\">\n        { airingToday.map(tv => \n            <Poster \n                key={tv.id}\n                id={tv.id} \n                title={tv.original_name} \n                imageUrl={tv.poster_path}  \n                rating={tv.vote_average} \n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n            />\n            ) }\n        </Section>\n        )} \n\n\n        { popular && popular.length > 0 && (\n        <Section title=\"Popular\">\n        { popular.map(tv => \n            <Poster \n                key={tv.id}\n                id={tv.id} \n                title={tv.original_name} \n                imageUrl={tv.poster_path}  \n                rating={tv.vote_average} \n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n            />\n            ) }\n        </Section>\n        )}\n        { error && <Message color =\"#d63031\" text={ error }/>} \n    </Container>\n    ;\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array, \n    airingToday: PropTypes.array, \n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    async componentDidMount(){\n        try{\n            const {data: {results: topRated}} = await tvApi.topRated();\n            const {data: {results: popular}} = await tvApi.popular();\n            const {data: {results: airingToday}} = await tvApi.airingToday();\n          \n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n\n        } catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            })\n\n        } finally {\n            this.setState({\n                loading: false,\n            })\n        }\n    }\n\n    render(){\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        console.log(this.state)\n        return <TVPresenter \n                    topRated={topRated}\n                    popular={popular}\n                    airingToday={airingToday}\n                    loading={loading}\n                    error={error}\n                />\n    }\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"} | Brandon Kim\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location: { pathname } } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id } }, history: { push } } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    \n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst HeaderC = ({ location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current = {pathname === \"/\"} >\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current = {pathname === \"/tv\"} >\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current = {pathname === \"/search\"} >\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n);\n\nexport default withRouter(HeaderC);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\";\nimport Header from 'Components/Header';\n\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/tv\" exact component={TV} />\n                    <Route path=\"/search\" component={Search} />\n                    <Route path=\"/movie/:id\" component={Detail} />\n                    <Route path=\"/tv/:id\" component={Detail} />\n                    <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n        </>\n    </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles'\n\nclass App extends Component {\n  render () {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}